<?php

namespace Chippyash\Test\Zend\Acl\Xml;

use Chippyash\Zend\Acl\Xml\AclBuilder;
use Zend\Permissions\Acl\Acl;
use Chippyash\Type\String\StringType;

require_once __DIR__ . '/Stubs/TestResourceStub.php';
require_once __DIR__ . '/Stubs/TestRoleStub.php';
require_once __DIR__ . '/Stubs/TestAssertionStub.php';

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-12-21 at 10:52:55.
 */
class AclBuilderTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var AclBuilder
     */
    protected $object;
    /**
     *
     * @var Acl
     */
    protected $acl;
    
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() 
    {
        $this->acl = new Acl();
        $this->object = new AclBuilder(new StringType(__DIR__ . '/fixtures/test.xml'), $this->acl);
    }

    public function testBuildWillCreateAclDefinition()
    {
        $this->assertTrue($this->object->build());
        
        $this->assertTrue($this->acl->hasRole('guest'));
        $this->assertTrue($this->acl->hasResource('logout'));
        $this->assertTrue($this->acl->isAllowed('guest','login'));
        $this->assertTrue($this->acl->isAllowed('user',null,'GET'));
    }
    
    /**
     * @expectedException Chippyash\Zend\Acl\Xml\Exceptions\AclBuilderException
     * @expectedExceptionMessage ACL definition XML does not exist
     */
    public function testBuildWillThrowExceptionIfXmlFileIsNotFound()
    {
        $sut = new AclBuilder(new StringType('foo'), $this->acl);
    }

    /**
     * @expectedException Chippyash\Zend\Acl\Xml\Exceptions\AclBuilderException
     * @expectedExceptionMessage ACL definition is invalid
     */
    public function testBuildWillThrowExceptionIfXmlFileIsInvalid()
    {
        $sut = new AclBuilder(new StringType(__DIR__ . '/fixtures/badtest.xml'), $this->acl);
    }
    
    public function testBuildCanAcceptImportedDefinitionsWithChildFilesInSameDirectoryAsParent()
    {
        $this->object = new AclBuilder(new StringType(__DIR__ . '/fixtures/testimported.xml'), $this->acl);
        $this->assertTrue($this->object->build());
        
        $this->assertTrue($this->acl->hasRole('guest'));
        $this->assertTrue($this->acl->hasResource('logout'));
        $this->assertTrue($this->acl->isAllowed('guest','login'));
        $this->assertTrue($this->acl->isAllowed('user',null,'GET'));

        $this->assertTrue($this->acl->isAllowed('guest','foo'));
    }

    public function testBuildCanAcceptImportedDefinitionsWithChildFilesInDirectoryRelativeToParent()
    {
        $this->object = new AclBuilder(new StringType(__DIR__ . '/fixtures/testimportedRelative.xml'), $this->acl);
        $this->assertTrue($this->object->build());
        
        $this->assertTrue($this->acl->hasRole('guest'));
        $this->assertTrue($this->acl->hasResource('logout'));
        $this->assertTrue($this->acl->isAllowed('guest','login'));
        $this->assertTrue($this->acl->isAllowed('user',null,'GET'));

        $this->assertTrue($this->acl->isAllowed('guest','foo'));
    }
    
    public function testBuildCanAcceptXMLAsString()
    {
        $content = file_get_contents(__DIR__ . '/fixtures/test.xml');

        $this->object = new AclBuilder(new StringType($content), $this->acl);
        $this->assertTrue($this->object->build());
        
        $this->assertTrue($this->acl->hasRole('guest'));
        $this->assertTrue($this->acl->hasResource('logout'));
        $this->assertTrue($this->acl->isAllowed('guest','login'));
        $this->assertTrue($this->acl->isAllowed('user',null,'GET'));
    }
}
